name: Build and Release Executables

on:
  push:
    branches:
      - master
  release:
    types: [created]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest', 'windows-latest']

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.x'

      - name: Install dependencies
        run: |
          pip install ttkbootstrap pillow

      - name: Build executable
        uses: Nuitka/Nuitka-Action@main
        with:
          nuitka-version: main
          script-name: main.py
          mode: onefile
          enable-plugins: tk-inter

      - name: Upload executable (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: windows-executable
          path: build/main.exe

      - name: Upload executable (Linux)
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: linux-executable
          path: build/main.bin

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download Windows executable
        uses: actions/download-artifact@v4
        with:
          name: windows-executable
          path: ./

      - name: Download Linux executable
        uses: actions/download-artifact@v4
        with:
          name: linux-executable
          path: ./

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: V1.0
          release_name: Release V1.0
          draft: false
          prerelease: false

      - name: Upload Windows executable to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./main.exe
          asset_name: main.exe
          asset_content_type: application/octet-stream

      - name: Upload Linux executable to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./main.bin
          asset_name: main.bin
          asset_content_type: application/octet-stream